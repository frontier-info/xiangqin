<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.frontierinfo.db.dao.T01UserBasicInfoDao">
  <resultMap id="BaseResultMap" type="jp.frontierinfo.db.entity.T01UserBasicInfo">
    <constructor>
      <idArg column="uid" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="uname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="birth_date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="age" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="birth_place" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="profession" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="interest" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="uheight" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
      <arg column="uweight" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
      <arg column="introduce" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="avatar_img" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="uimages1" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="uimages2" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="uimages3" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="identification_img" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="require_age_from" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="require_age_to" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="require_birth_place" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="require_address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="require_profession" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="require_height_from" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
      <arg column="require_height_to" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
      <arg column="require_weight_from" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
      <arg column="require_weight_to" javaType="java.math.BigDecimal" jdbcType="NUMERIC" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    uid, uname, sex, birth_date, age, birth_place, address, profession, interest, uheight, 
    uweight, introduce, avatar_img, uimages1, uimages2, uimages3, identification_img, 
    require_age_from, require_age_to, require_birth_place, require_address, require_profession, 
    require_height_from, require_height_to, require_weight_from, require_weight_to
  </sql>
  <!--   查询指定检索条件的30名异性信息 -->
  <select id="selectRecommendList" parameterType="jp.frontierinfo.db.entity.T01UserSearchInfo" resultType="jp.frontierinfo.db.bean.UserSimpleInfo">
    select 
      basic_info.uid relationId, 
      basic_info.uname, 
      basic_info.sex, 
      basic_info.introduce, 
      basic_info.avatar_img avatarImg
    from xiangqin.t01_user_basic_info basic_info
    inner join xiangqin.t01_user_login_info login_info
    on login_info.uid = basic_info.uid
    and login_info.user_rank_code not in ('08','09')
    and login_info.user_status_code = '02'
    and login_info.delete_flg = false
    <where>
      <if test="uid != null">
        and basic_info.uid != #{uid,jdbcType=VARCHAR}
      </if>
      <if test="sex != null">
        and basic_info.sex = #{sex,jdbcType=VARCHAR}
      </if>
      <if test="ageFrom != null and ageFrom != ''">
        and date_part('year',age(basic_info.birth_date)) <![CDATA[>=]]> #{ageFrom,jdbcType=INTEGER}
      </if>
      <if test="ageTo != null and ageTo != ''">
        and date_part('year',age(basic_info.birth_date)) <![CDATA[<]]> #{ageTo,jdbcType=INTEGER}
      </if>
      <if test="birthPlace != null and birthPlace != ''">
        and basic_info.birth_place = #{birthPlace,jdbcType=VARCHAR}
      </if>
      <if test="address != null and address != ''">
        and basic_info.address = #{address,jdbcType=VARCHAR}
      </if>
      <if test="profession != null and profession != ''">
        and basic_info.profession = #{profession,jdbcType=VARCHAR}
      </if>
      <if test="uheightFrom != null and uheightFrom != ''">
        and basic_info.uheight <![CDATA[>=]]> #{uheightFrom,jdbcType=NUMERIC}
      </if>
      <if test="uheightTo != null and uheightTo != ''">
        and basic_info.uheight <![CDATA[<]]> #{uheightTo,jdbcType=NUMERIC}
      </if>
      <if test="uweightFrom != null and uweightFrom != ''">
        and basic_info.uweight <![CDATA[>=]]> #{uweightFrom,jdbcType=NUMERIC}
      </if>
      <if test="uweightTo != null and uweightTo != ''">
        and basic_info.uweight <![CDATA[<]]> #{uweightTo,jdbcType=NUMERIC}
      </if>
    </where>
    limit 30   
  </select>
  <!--   指定检索条件的查询结果不满30名时,从数据库随机补位至30名 -->
  <select id="selectRandomList" parameterType="java.util.Map" resultType="jp.frontierinfo.db.bean.UserSimpleInfo">
    select 
      basic_info.uid relationId, 
      basic_info.uname, 
      basic_info.sex, 
      basic_info.introduce, 
      basic_info.avatar_img avatarImg
    from xiangqin.t01_user_basic_info basic_info
    inner join xiangqin.t01_user_login_info login_info
    on login_info.uid = basic_info.uid
    and login_info.user_rank_code not in ('08','09')
    and login_info.user_status_code = '02'
    and login_info.delete_flg = false
    <where>
      <if test="exceptList.size() > 0">
        basic_info.uid not in         
        <foreach collection="exceptList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
      </if>
    </where>
    order by random()
    limit #{limit}   
  </select>
  <!--   获取点击用户的全部信息(业务页面用) -->
  <select id="selectUserFullInfoByUid" parameterType="java.lang.String" resultType="jp.frontierinfo.db.bean.UserFullInfo">
    select
        basic.uid relationId
        , basic.uname
        , basic.sex
        , basic.birth_date birthDate
        , basic.age
        , login.mobile
        , login.email
        , basic.birth_place birthPlace
        , basic.address
        , basic.profession
        , basic.interest
        , basic.uheight
        , basic.uweight
        , basic.introduce
        , basic.avatar_img avatarImg
        , basic.uimages1
        , basic.uimages2
        , basic.uimages3
        , basic.require_age_from requireAgeFrom
	    , basic.require_age_to requireAgeTo
	    , basic.require_birth_place requireBirthPlace
	    , basic.require_address requireAddress
	    , basic.require_profession requireProfession
	    , basic.require_height_from requireHeightFrom
	    , basic.require_height_to requireHeightTo
	    , basic.require_weight_from requireWeightFrom
	    , basic.require_weight_to requireWeightTo
        , relations.relation_level1 relationLevel1
        , relations.relation_level2 relationLevel2
	from
	    xiangqin.t01_user_basic_info basic
	    inner join xiangqin.t01_user_login_info login
	    on basic.uid = login.uid
        left join xiangqin.t01_user_relations_info relations
        on relations.uid = #{uid,jdbcType=VARCHAR}
        and relations.relation_id = #{relationId,jdbcType=VARCHAR}
    where
    	basic.uid = #{relationId,jdbcType=VARCHAR}
  </select>
  <!--   获取点击用户的全部信息(业务页面用,向我打招呼的人用) -->
  <select id="selectUserFullInfoByRelationId" parameterType="java.lang.String" resultType="jp.frontierinfo.db.bean.UserFullInfo">
    select
        basic.uid relationId
        , basic.uname
        , basic.sex
        , basic.birth_date birthDate
        , basic.age
        , login.mobile
        , login.email
        , basic.birth_place birthPlace
        , basic.address
        , basic.profession
        , basic.interest
        , basic.uheight
        , basic.uweight
        , basic.introduce
        , basic.avatar_img avatarImg
        , basic.uimages1
        , basic.uimages2
        , basic.uimages3
        , basic.require_age_from requireAgeFrom
	    , basic.require_age_to requireAgeTo
	    , basic.require_birth_place requireBirthPlace
	    , basic.require_address requireAddress
	    , basic.require_profession requireProfession
	    , basic.require_height_from requireHeightFrom
	    , basic.require_height_to requireHeightTo
	    , basic.require_weight_from requireWeightFrom
	    , basic.require_weight_to requireWeightTo
        , relations.relation_level1 relationLevel1
        , relations.relation_level2 relationLevel2
	from
	    xiangqin.t01_user_basic_info basic
	    inner join xiangqin.t01_user_login_info login
	    on basic.uid = login.uid
        left join xiangqin.t01_user_relations_info relations
        on relations.relation_id = #{uid,jdbcType=VARCHAR}
        and relations.uid = #{relationId,jdbcType=VARCHAR}
    where
    	basic.uid = #{relationId,jdbcType=VARCHAR}
  </select>
  <!--   查询指定检索条件的用户全部信息(管理员页面用) -->
  <select id="selectUserFullInfoLi" parameterType="jp.frontierinfo.db.bean.BackstageSerachInfo" resultType="jp.frontierinfo.db.bean.UserFullInfo">
	select
	    login.uid
	    , basic.uname
	    , basic.sex
	    , basic.birth_date birthDate
	    , basic.age
	    , login.mobile
	    , login.email
	    , basic.birth_place birthPlace
	    , basic.address
	    , basic.profession
	    , basic.interest
	    , basic.uheight
	    , basic.uweight
	    , basic.introduce
	    , basic.avatar_img avatarImg
	    , basic.uimages1
	    , basic.uimages2
	    , basic.uimages3
	    , basic.identification_img identificationImg
	    , basic.require_age_from requireAgeFrom
	    , basic.require_age_to requireAgeTo
	    , basic.require_birth_place requireBirthPlace
	    , basic.require_address requireAddress
	    , basic.require_profession requireProfession
	    , basic.require_height_from requireHeightFrom
	    , basic.require_height_to requireHeightTo
	    , basic.require_weight_from requireWeightFrom
	    , basic.require_weight_to requireWeightTo
	    , login.user_status_code userStatusCode
	    , code_user_status.master_name userStatusName
	    , login.user_rank_code userRankCode
	    , code_user_rank.master_name userRankName
	    , login.user_censor_result userCensorResult
	    , login.create_time createTime
	    , login.delete_flg deleteFlg
	from
	    xiangqin.t01_user_basic_info basic
	    right join xiangqin.t01_user_login_info login
	    on basic.uid = login.uid
	    inner join xiangqin.m01_code_master_info code_user_status
	    on code_user_status.code_type = '01'
	    and code_user_status.master_code = login.user_status_code
	    inner join xiangqin.m01_code_master_info code_user_rank
	    on code_user_rank.code_type = '02'
	    and code_user_rank.master_code = login.user_rank_code
    <where>
      <if test="uid != null and uid != ''">
        and login.uid = #{uid,jdbcType=VARCHAR}
      </if>
      <if test="sex != null and sex != ''">
        and basic.sex = #{sex,jdbcType=VARCHAR}
      </if>
      <if test="ageFrom != null and ageFrom != ''">
        and date_part('year',age(basic.birth_date)) <![CDATA[>=]]> #{ageFrom,jdbcType=INTEGER}
      </if>
      <if test="ageTo != null and ageTo != ''">
        and date_part('year',age(basic.birth_date)) <![CDATA[<]]> #{ageTo,jdbcType=INTEGER}
      </if>
      <if test="birthPlace != null and birthPlace != ''">
        and basic.birth_place = #{birthPlace,jdbcType=VARCHAR}
      </if>
      <if test="address != null and address != ''">
        and basic.address = #{address,jdbcType=VARCHAR}
      </if>
      <if test="profession != null and profession != ''">
        and basic.profession = #{profession,jdbcType=VARCHAR}
      </if>
      <if test="uheightFrom != null and uheightFrom != ''">
        and basic.uheight <![CDATA[>=]]> #{uheightFrom,jdbcType=NUMERIC}
      </if>
      <if test="uheightTo != null and uheightTo != ''">
        and basic.uheight <![CDATA[<]]> #{uheightTo,jdbcType=NUMERIC}
      </if>
      <if test="uweightFrom != null and uweightFrom != ''">
        and basic.uweight <![CDATA[>=]]> #{uweightFrom,jdbcType=NUMERIC}
      </if>
      <if test="uweightTo != null and uweightTo != ''">
        and basic.uweight <![CDATA[<]]> #{uweightTo,jdbcType=NUMERIC}
      </if>
      <if test="userStatus != null and userStatus != ''">
        and login.user_status_code = #{userStatus,jdbcType=VARCHAR}
      </if>
      <if test="userRank != null and userRank != ''">
        and login.user_rank_code = #{userRank,jdbcType=VARCHAR}
      </if>
    </where>
     
  </select>
  <!--   查询指定用户的全部信息(管理员页面用) -->
  <select id="selectUserFullInfoByUidForBackstage" parameterType="java.lang.String" resultType="jp.frontierinfo.db.bean.UserFullInfo">
	select
	    basic.uid
	    , basic.uname
	    , basic.sex
	    , basic.birth_date birthDate
	    , basic.age
	    , login.mobile
	    , login.email
	    , basic.birth_place birthPlace
	    , basic.address
	    , basic.profession
	    , basic.interest
	    , basic.uheight
	    , basic.uweight
	    , basic.introduce
	    , basic.avatar_img avatarImg
	    , basic.uimages1
	    , basic.uimages2
	    , basic.uimages3
	    , basic.identification_img identificationImg
	    , basic.require_age_from requireAgeFrom
	    , basic.require_age_to requireAgeTo
	    , basic.require_birth_place requireBirthPlace
	    , basic.require_address requireAddress
	    , basic.require_profession requireProfession
	    , basic.require_height_from requireHeightFrom
	    , basic.require_height_to requireHeightTo
	    , basic.require_weight_from requireWeightFrom
	    , basic.require_weight_to requireWeightTo
	    , login.user_status_code userStatusCode
	    , code_user_status.master_name userStatusName
	    , login.user_rank_code userRankCode
	    , code_user_rank.master_name userRankName
	    , login.user_censor_result userCensorResult
	    , login.create_time createTime
	    , login.delete_flg deleteFlg
	from
	    xiangqin.t01_user_basic_info basic
	    left join xiangqin.t01_user_login_info login
	    on basic.uid = login.uid
	    inner join xiangqin.m01_code_master_info code_user_status
	    on code_user_status.code_type = '01'
	    and code_user_status.master_code = login.user_status_code
	    inner join xiangqin.m01_code_master_info code_user_rank
	    on code_user_rank.code_type = '02'
	    and code_user_rank.master_code = login.user_rank_code
    where basic.uid = #{uid,jdbcType=VARCHAR}
     
  </select>
  <!--  +++++++++++++++++++++++++++++++++++++++++++++++  -->
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xiangqin.t01_user_basic_info
    where uid = #{uid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from xiangqin.t01_user_basic_info
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="jp.frontierinfo.db.entity.T01UserBasicInfo">
    insert into xiangqin.t01_user_basic_info (uid, uname, sex, 
      birth_date, age, birth_place, 
      address, profession, interest, 
      uheight, uweight, introduce, 
      avatar_img, uimages1, uimages2, 
      uimages3, identification_img, require_age_from, 
      require_age_to, require_birth_place, require_address, 
      require_profession, require_height_from, require_height_to, 
      require_weight_from, require_weight_to)
    values (#{uid,jdbcType=VARCHAR}, #{uname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birthDate,jdbcType=DATE}, #{age,jdbcType=INTEGER}, #{birthPlace,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{profession,jdbcType=VARCHAR}, #{interest,jdbcType=VARCHAR}, 
      #{uheight,jdbcType=NUMERIC}, #{uweight,jdbcType=NUMERIC}, #{introduce,jdbcType=VARCHAR}, 
      #{avatarImg,jdbcType=VARCHAR}, #{uimages1,jdbcType=VARCHAR}, #{uimages2,jdbcType=VARCHAR}, 
      #{uimages3,jdbcType=VARCHAR}, #{identificationImg,jdbcType=VARCHAR}, #{requireAgeFrom,jdbcType=INTEGER}, 
      #{requireAgeTo,jdbcType=INTEGER}, #{requireBirthPlace,jdbcType=VARCHAR}, #{requireAddress,jdbcType=VARCHAR}, 
      #{requireProfession,jdbcType=VARCHAR}, #{requireHeightFrom,jdbcType=NUMERIC}, #{requireHeightTo,jdbcType=NUMERIC}, 
      #{requireWeightFrom,jdbcType=NUMERIC}, #{requireWeightTo,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="jp.frontierinfo.db.entity.T01UserBasicInfo">
    insert into xiangqin.t01_user_basic_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="uname != null">
        uname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthDate != null">
        birth_date,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="birthPlace != null">
        birth_place,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="interest != null">
        interest,
      </if>
      <if test="uheight != null">
        uheight,
      </if>
      <if test="uweight != null">
        uweight,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="avatarImg != null">
        avatar_img,
      </if>
      <if test="uimages1 != null">
        uimages1,
      </if>
      <if test="uimages2 != null">
        uimages2,
      </if>
      <if test="uimages3 != null">
        uimages3,
      </if>
      <if test="identificationImg != null">
        identification_img,
      </if>
      <if test="requireAgeFrom != null">
        require_age_from,
      </if>
      <if test="requireAgeTo != null">
        require_age_to,
      </if>
      <if test="requireBirthPlace != null">
        require_birth_place,
      </if>
      <if test="requireAddress != null">
        require_address,
      </if>
      <if test="requireProfession != null">
        require_profession,
      </if>
      <if test="requireHeightFrom != null">
        require_height_from,
      </if>
      <if test="requireHeightTo != null">
        require_height_to,
      </if>
      <if test="requireWeightFrom != null">
        require_weight_from,
      </if>
      <if test="requireWeightTo != null">
        require_weight_to,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="uname != null">
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        #{birthDate,jdbcType=DATE},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="birthPlace != null">
        #{birthPlace,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="interest != null">
        #{interest,jdbcType=VARCHAR},
      </if>
      <if test="uheight != null">
        #{uheight,jdbcType=NUMERIC},
      </if>
      <if test="uweight != null">
        #{uweight,jdbcType=NUMERIC},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="avatarImg != null">
        #{avatarImg,jdbcType=VARCHAR},
      </if>
      <if test="uimages1 != null">
        #{uimages1,jdbcType=VARCHAR},
      </if>
      <if test="uimages2 != null">
        #{uimages2,jdbcType=VARCHAR},
      </if>
      <if test="uimages3 != null">
        #{uimages3,jdbcType=VARCHAR},
      </if>
      <if test="identificationImg != null">
        #{identificationImg,jdbcType=VARCHAR},
      </if>
      <if test="requireAgeFrom != null">
        #{requireAgeFrom,jdbcType=INTEGER},
      </if>
      <if test="requireAgeTo != null">
        #{requireAgeTo,jdbcType=INTEGER},
      </if>
      <if test="requireBirthPlace != null">
        #{requireBirthPlace,jdbcType=VARCHAR},
      </if>
      <if test="requireAddress != null">
        #{requireAddress,jdbcType=VARCHAR},
      </if>
      <if test="requireProfession != null">
        #{requireProfession,jdbcType=VARCHAR},
      </if>
      <if test="requireHeightFrom != null">
        #{requireHeightFrom,jdbcType=NUMERIC},
      </if>
      <if test="requireHeightTo != null">
        #{requireHeightTo,jdbcType=NUMERIC},
      </if>
      <if test="requireWeightFrom != null">
        #{requireWeightFrom,jdbcType=NUMERIC},
      </if>
      <if test="requireWeightTo != null">
        #{requireWeightTo,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="jp.frontierinfo.db.entity.T01UserBasicInfo">
    update xiangqin.t01_user_basic_info
    <set>
      <if test="uname != null">
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        birth_date = #{birthDate,jdbcType=DATE},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="birthPlace != null">
        birth_place = #{birthPlace,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="interest != null">
        interest = #{interest,jdbcType=VARCHAR},
      </if>
      <if test="uheight != null">
        uheight = #{uheight,jdbcType=NUMERIC},
      </if>
      <if test="uweight != null">
        uweight = #{uweight,jdbcType=NUMERIC},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="avatarImg != null">
        avatar_img = #{avatarImg,jdbcType=VARCHAR},
      </if>
      <if test="uimages1 != null">
        uimages1 = #{uimages1,jdbcType=VARCHAR},
      </if>
      <if test="uimages2 != null">
        uimages2 = #{uimages2,jdbcType=VARCHAR},
      </if>
      <if test="uimages3 != null">
        uimages3 = #{uimages3,jdbcType=VARCHAR},
      </if>
      <if test="identificationImg != null">
        identification_img = #{identificationImg,jdbcType=VARCHAR},
      </if>
      <if test="requireAgeFrom != null">
        require_age_from = #{requireAgeFrom,jdbcType=INTEGER},
      </if>
      <if test="requireAgeTo != null">
        require_age_to = #{requireAgeTo,jdbcType=INTEGER},
      </if>
      <if test="requireBirthPlace != null">
        require_birth_place = #{requireBirthPlace,jdbcType=VARCHAR},
      </if>
      <if test="requireAddress != null">
        require_address = #{requireAddress,jdbcType=VARCHAR},
      </if>
      <if test="requireProfession != null">
        require_profession = #{requireProfession,jdbcType=VARCHAR},
      </if>
      <if test="requireHeightFrom != null">
        require_height_from = #{requireHeightFrom,jdbcType=NUMERIC},
      </if>
      <if test="requireHeightTo != null">
        require_height_to = #{requireHeightTo,jdbcType=NUMERIC},
      </if>
      <if test="requireWeightFrom != null">
        require_weight_from = #{requireWeightFrom,jdbcType=NUMERIC},
      </if>
      <if test="requireWeightTo != null">
        require_weight_to = #{requireWeightTo,jdbcType=NUMERIC},
      </if>
    </set>
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.frontierinfo.db.entity.T01UserBasicInfo">
    update xiangqin.t01_user_basic_info
    set uname = #{uname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=DATE},
      age = #{age,jdbcType=INTEGER},
      birth_place = #{birthPlace,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      interest = #{interest,jdbcType=VARCHAR},
      uheight = #{uheight,jdbcType=NUMERIC},
      uweight = #{uweight,jdbcType=NUMERIC},
      introduce = #{introduce,jdbcType=VARCHAR},
      avatar_img = #{avatarImg,jdbcType=VARCHAR},
      uimages1 = #{uimages1,jdbcType=VARCHAR},
      uimages2 = #{uimages2,jdbcType=VARCHAR},
      uimages3 = #{uimages3,jdbcType=VARCHAR},
      identification_img = #{identificationImg,jdbcType=VARCHAR},
      require_age_from = #{requireAgeFrom,jdbcType=INTEGER},
      require_age_to = #{requireAgeTo,jdbcType=INTEGER},
      require_birth_place = #{requireBirthPlace,jdbcType=VARCHAR},
      require_address = #{requireAddress,jdbcType=VARCHAR},
      require_profession = #{requireProfession,jdbcType=VARCHAR},
      require_height_from = #{requireHeightFrom,jdbcType=NUMERIC},
      require_height_to = #{requireHeightTo,jdbcType=NUMERIC},
      require_weight_from = #{requireWeightFrom,jdbcType=NUMERIC},
      require_weight_to = #{requireWeightTo,jdbcType=NUMERIC}
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
</mapper>