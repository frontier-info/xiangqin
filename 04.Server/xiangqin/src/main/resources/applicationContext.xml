<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                         http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 启动注解 -->
	<context:annotation-config />
    <!-- 注解配置  -->
    <context:component-scan base-package="jp.frontierinfo"/>
    <!-- 属性占位符  -->
    <context:property-placeholder location="classpath:database.properties"
    		system-properties-mode="NEVER"/>
    		
	<!-- 视图解析器 -->
	<!-- ViewResolver -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<!-- 前缀：/WEB-INF/jsp/ 后缀：.jsp  -->
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
	</bean>
    
	<!-- 配置数据源 -->
	<!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"> -->
<!-- 	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="username" value="${username}" />
		<property name="url" value="${url}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driverClass}" />
        <property name="maxIdle" value="8" />
        <property name="minIdle" value="4" />
	</bean>

	<!-- 获取 SqlSessionFactory 工厂类 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="jp.frontierinfo.db" />
<!-- 		是否开启mabatis配置文件(开启输出SQL) -->
<!--         <property name="configLocation" value="classpath:mybatis-config.xml"></property> -->
		<property name="mapperLocations" value="classpath*:jp/frontierinfo/db/mapper/*Dao.xml" />
	</bean>

	<!-- 搜索有哪些 mapper 实现类，把mapper接口自动配置成 spring 中的 <bean> -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- name="basePackage":(起始)包名, 从这个包开始扫描 -->
		<property name="sqlSessionFactoryBeanName" value="sessionFactory" />
		<property name="basePackage" value="jp.frontierinfo.db.dao" />
	</bean>
	<!-- 定义事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">		
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 开启事务控制的注解支持 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
</beans>